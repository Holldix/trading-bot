version: '3.8'

services:
  postgres:
    image: postgres:16.2
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  redis:
    image: redis:7.4-rc-alpine
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save "" --appendonly no --maxmemory 512mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

  celery:
    build: .
    container_name: celery
    restart: always
    command: >
      sh -c "celery -A worker worker -l INFO -Q high_priority,default -c 4"
    volumes:
      - .:/code/
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G

  bot:
    build: .
    container_name: bot
    restart: always
    ports:
      - 8001:8000
    command: >
      sh -c "python bot.py"
    volumes:
      - .:/code/
    depends_on:
      - postgres

  scanner:
    build: .
    container_name: scanner
    restart: always
    command: >
      sh -c "python scanner.py"
    volumes:
      - .:/code/
    depends_on:
      - redis
      - celery
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
